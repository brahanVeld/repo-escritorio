/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import conexion.conector;
import conexion.direccion;
import java.awt.Point;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abrahán
 */
public class usuario extends javax.swing.JFrame {
//this.tablaAux = new DefaultTableModel();
    reporte _reporte= new reporte();
    conector _conector= new conector();
    //DefaultTableModel tablaAux;
    /**
     * Creates new form usuario
     */
    public usuario() {
        
        initComponents();
        try {
            setIconImage(new ImageIcon(getClass().getResource("/img/LOGO2chiquito.png")).getImage());
        } catch (Exception ex) {
        }
        cargarReportes();
        tablaReportes.getTableHeader().setReorderingAllowed(false);
        seleccionarFila();
        buscar.setText("");
        cargarClientes();
        seleccionarCliente();
        
        
    }
    
    
    
    
    
    
    String usuario="";
    
    
    public usuario(String usuario){
        this.tablaAux = new DefaultTableModel();
        if(usuario.isEmpty()){
            this.usuario="";
        }else{
             this.usuario=usuario;
        }
       
    }
    
    
    
    /***
     * Metodo para cargar en un inicio la tabla sobre información de los clientes
     */
    void cargarClientes(){
        String tabla="select * from clientesInfo;";
        this._conector.mariaDB();
        this.tablaInfoClientes= new javax.swing.JTable(this._conector.estructurarTabla(tabla)){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
                
            }
        };
        this.jScrollPane4.getViewport().add(this.tablaInfoClientes);
        this._conector.cerrarConeccion();
                
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        borrarContextual = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        editarContextual = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton2 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jButton4 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        buscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReportes = new javax.swing.JTable();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        jButton5 = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        jButton6 = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jButton7 = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        jButton8 = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaInfoClientes = new javax.swing.JTable();

        borrarContextual.setText("Borrar");
        borrarContextual.setComponentPopupMenu(jPopupMenu1);
        borrarContextual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarContextualActionPerformed(evt);
            }
        });
        jPopupMenu1.add(borrarContextual);
        jPopupMenu1.add(jSeparator3);

        editarContextual.setText("Editar");
        editarContextual.setComponentPopupMenu(jPopupMenu1);
        editarContextual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarContextualActionPerformed(evt);
            }
        });
        jPopupMenu1.add(editarContextual);

        jPopupMenu1.getAccessibleContext().setAccessibleParent(tablaReportes);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Usuario");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jTabbedPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyPressed(evt);
            }
        });

        jToolBar1.setRollover(true);

        jButton1.setText("Nuevo");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator1);

        jButton2.setText("Borrar");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);
        jToolBar1.add(jSeparator4);

        jButton3.setText("Editar");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);
        jToolBar1.add(jSeparator6);

        jButton4.setText("Recargar");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);
        jToolBar1.add(jSeparator2);

        jLabel1.setText("Buscar");
        jToolBar1.add(jLabel1);

        buscar.setText("jTextField1");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscarKeyPressed(evt);
            }
        });
        jToolBar1.add(buscar);

        jScrollPane1.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setEnabled(false);

        tablaReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaReportes.setComponentPopupMenu(jPopupMenu1);
        tablaReportes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaReportes.getTableHeader().setReorderingAllowed(false);
        tablaReportes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaReportesMouseClicked(evt);
            }
        });
        tablaReportes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaReportesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaReportes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addComponent(jSeparator5)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reportes", jPanel2);

        jToolBar2.setRollover(true);

        jButton5.setText("Nuevo");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton5);
        jToolBar2.add(jSeparator7);

        jButton6.setText("Ver");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton6);
        jToolBar2.add(jSeparator8);

        jButton7.setText("Eliminar");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton7);
        jToolBar2.add(jSeparator9);

        jLabel2.setText("Buscar");
        jToolBar2.add(jLabel2);

        jTextField1.setText("jTextField1");
        jToolBar2.add(jTextField1);
        jToolBar2.add(jSeparator11);

        jButton8.setText("Recargar");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton8);
        jToolBar2.add(jSeparator10);

        tablaInfoClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tablaInfoClientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Clientes", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            //this._conector.mariaDB();
            _direccion.guardaridReporte("");
            this._reporte.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tablaReportesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaReportesMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            
            try {
                guardarEntext();
                reporte _reporte= new reporte();
                 _reporte.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_tablaReportesMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ////codigo pa borrar
        Borrar();
        cargarReportes();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void borrarContextualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarContextualActionPerformed
        // TODO add your handling code here:
        
        this.Borrar();
        cargarReportes();
    }//GEN-LAST:event_borrarContextualActionPerformed

    private void editarContextualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarContextualActionPerformed
        try {
            // TODO add your handling code here:
            this.guardarEntext();
            reporte _reporte= new reporte();
            _reporte.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_editarContextualActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            guardarEntext();
            reporte _reporte= new reporte();
            _reporte.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTabbedPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPane1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_F5){
            cargarReportes();
        }
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_F6){
            try {
            // TODO add your handling code here:
            this.guardarEntext();
            reporte _reporte= new reporte();
            _reporte.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        
    }//GEN-LAST:event_jTabbedPane1KeyPressed

    private void buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
       if(!buscar.getText().isEmpty()){
           String usuario=_direccion.leerUsuario();
           this._conector.mariaDB();
           this.tablaAux=this._conector.estructurarTabla("select * from reportes where fecha like '%"+buscar.getText()+"%' or horaInicio like '%"+this.buscar.getText()+"%' or"
                   + " idCliente like '%"+this.buscar.getText()+"%' or personas like '%"+buscar.getText()+"%' or asesor like '%"+this.buscar.getText()+"%' or"
                           + " persona like '%"+this.buscar.getText()+"%' or materiales like '%"+this.buscar.getText()+"%' and idUsuario='"+usuario+"'");
           this.tablaReportes= new javax.swing.JTable(tablaAux){
            @Override
            public boolean isCellEditable(int row, int column){
            return false;
            }
        };
        //this.tablaReportes.setModel(tablaAux);
        this.jScrollPane1.getViewport().add(this.tablaReportes);
        this._conector.cerrarConeccion();
           
       }
        }
        
        
        
    }//GEN-LAST:event_buscarKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ESCAPE){
            System.exit(0);
        }
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_F5){
            cargarReportes();
        }
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_F6){
            try {
            // TODO add your handling code here:
            this.guardarEntext();
            reporte _reporte= new reporte();
            _reporte.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        
    }//GEN-LAST:event_formKeyPressed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarActionPerformed

    private void tablaReportesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaReportesKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_F5){
            try {
                _direccion.guardarReporte("", "", "", "", "", "", "", "");
                _direccion.guardarCliente("");
                
                cargarReportes();
            } catch (IOException ex) {
                Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_F6){
            try {
            // TODO add your handling code here:
            this.guardarEntext();
            reporte _reporte= new reporte();
            _reporte.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        
        
    }//GEN-LAST:event_tablaReportesKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            _direccion.guardarReporte("", "", "", "", "", "", "", "");
            _direccion.guardarCliente("");
            this.cargarReportes();
        } catch (IOException ex) {
            Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed
infoClientes clientes= new infoClientes();
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        clientes.setVisible(true);
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
        cargarClientes();
        
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
          if(ide!=-1){
            _conector.mariaDB();
            _conector.update("delete from clientesInfo where id="+ide+"");
            _conector.cerrarConeccion();
        }else{
           JOptionPane.showMessageDialog(rootPane, "Seleccione primero un cliente y despues de clic en eliminar. Esto no afectara a macropro.");  
        }
        cargarClientes();
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        clientes= new infoClientes(ide);
        clientes.setVisible(true);
        
        
    }//GEN-LAST:event_jButton6ActionPerformed
    
    void Borrar(){
        String idReporte=_direccion.leeridReporte();
        if(!idReporte.isEmpty()){
            int validar=JOptionPane.showConfirmDialog(rootPane, "¿Desea borrar el reporte?", "Borrar",JOptionPane.OK_CANCEL_OPTION);
            if(validar==JOptionPane.OK_OPTION){
                String sql="delete from reportes where id="+idReporte+" and procesado=0";
                this._conector.mariaDB();
                this._conector.update(sql);
                this._conector.cerrarConeccion();
                
            }
            
        }
    }
    
    
    
    void guardarEntext() throws IOException{
        String idReporte=_direccion.leeridReporte();
        System.out.println("id reporte "+idReporte);
        if(!idReporte.isEmpty()){
            _direccion.guardarReporte("", "", "", "", "", "", "", "");
            _direccion.guardarCliente("");
            _direccion.getcliente("");
            _conector.mariaDB();
            String fecha, horaInicio, idCliente, poliza, persona, asesor, tiempoTrabajo,ServicioRealizado, materiales, nomcliente;
            fecha=_conector.devolverDato("select fecha from reportes where id="+idReporte+" and procesado=0", "fecha");
            horaInicio=_conector.devolverDato("select horaInicio from reportes where id="+idReporte+" and procesado=0", "horaInicio");
            idCliente=_conector.devolverDato("select idCliente from reportes where id="+idReporte+" and procesado=0", "idCliente");
            poliza=_conector.devolverDato("select poliza from reportes where id="+idReporte+" and procesado=0", "poliza");
            persona=_conector.devolverDato("select personas from reportes where id="+idReporte+" and procesado=0", "personas");
            asesor=_conector.devolverDato("select asesor from reportes where id="+idReporte+" and procesado=0", "asesor");
            tiempoTrabajo=_conector.devolverDato("select tiempoTrabajo from reportes where id="+idReporte+" and procesado=0", "tiempoTrabajo");
            ServicioRealizado=_conector.devolverDato("select servicioRealizado from reportes where id="+idReporte+" and procesado=0", "servicioRealizado");
            materiales=_conector.devolverDato("select materiales from reportes where id="+idReporte+" and procesado=0", "materiales");
            nomcliente=_conector.devolverDato("select nomCliente from reportes where id="+idReporte+" and procesado=0", "nomCliente");
            _direccion.guardarReporte(fecha, horaInicio, poliza, persona, asesor, tiempoTrabajo, ServicioRealizado, materiales);
            _direccion.guardarCliente(idCliente);
            _direccion.guardaridReporte(String.valueOf(idReporte));
            _direccion.getcliente(nomcliente);
            this._conector.cerrarConeccion();
          // idReporte=0;
            //28395
        }else{
            JOptionPane.showMessageDialog(rootPane, "Primero selecciona una fila y despues\n"
                    + "clic derecho para ver las opciones.");
        }
    }
    
    
    
    
    //int fila=0;
    //int idReporte=0;
    void seleccionarFila(){
        this.tablaReportes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent arg0) {
                if(tablaReportes.getSelectedRow()!=-1){
                    int fila=tablaReportes.getSelectedRow();
                    String idReporte= tablaReportes.getValueAt(fila, 0).toString();
                    try {
                        _direccion.guardaridReporte(idReporte);
                    } catch (IOException ex) {
                        Logger.getLogger(usuario.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
                
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        
        
    }////home/respcartones/R-$(date +%Y-%m-%d) 
    
    int ide=-1;
    void seleccionarCliente(){
        this.tablaInfoClientes.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
           

            @Override
            public void valueChanged(ListSelectionEvent e) {
              if(tablaInfoClientes.getSelectedRow()!=-1){
                  int fila=tablaInfoClientes.getSelectedRow();
                  ide=(int) tablaInfoClientes.getValueAt(fila, 0);
                  
              }  
                
                
                
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    
    DefaultTableModel tablaAux= new DefaultTableModelImpl();
    
    
    direccion _direccion= new direccion();
    void cargarReportes(){
        
        String usuario=_direccion.leerUsuario();
        if(!usuario.isEmpty()){
            this._conector.mariaDB();
            String sql="select * from reportes where idUsuario='"+usuario+"'";
        this.tablaAux=this._conector.estructurarTabla(sql);
//        this.tablaReportes= new javax.swing.JTable(tablaAux){
//            @Override
//            public boolean isCellEditable(int row, int column){
//            return false;
//            }
//        };
        this.tablaReportes.setModel(tablaAux);
        this.jScrollPane1.getViewport().add(this.tablaReportes);
        this._conector.cerrarConeccion();
        }
        
        
        
        
    }
    
    
    
 
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new usuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem borrarContextual;
    private javax.swing.JTextField buscar;
    private javax.swing.JMenuItem editarContextual;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTable tablaInfoClientes;
    private javax.swing.JTable tablaReportes;
    // End of variables declaration//GEN-END:variables

   private static class DefaultTableModelImpl extends DefaultTableModel {

        public DefaultTableModelImpl() {
        }

        @Override
        public boolean isCellEditable(int row, int column){
            return false;
        }
    }
}
